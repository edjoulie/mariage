/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8FPsFEcwfPwJTeYKjXtkVp
// Component: foO7_faQxJ0R

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header2 from "../../Header2"; // plasmic-import: hmaXZuvwR90s/component
import ProductCard from "../../ProductCard"; // plasmic-import: a9sywAIFgNty/component
import Ratings from "../../Ratings"; // plasmic-import: bUzvmv2Yjdda/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: mO2Fghscjgep/component
import BlogPost from "../../BlogPost"; // plasmic-import: iOUatfe-aEY2/component
import Footer from "../../Footer"; // plasmic-import: DhmVQn3kFNyW/component
import MenuButton from "../../MenuButton"; // plasmic-import: SqS70_XW4gk5/component

import { useScreenVariants as useScreenVariantswvxiCa7KExGf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: WvxiCA7KExGF/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 8FPsFEcwfPwJTeYKjXtkVp/projectcss
import sty from "./PlasmicFaq.module.css"; // plasmic-import: foO7_faQxJ0R/css

import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: UUpnGxTt_l_h/icon
import DotSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__DotSvgrepoCom1Svg"; // plasmic-import: foItqpQHPLPM/icon
import LocationSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__LocationSvgrepoCom1Svg"; // plasmic-import: fvmrCsuxW7Er/icon
import LogoWhiteSvgIcon from "./icons/PlasmicIcon__LogoWhiteSvg"; // plasmic-import: Uk5WPe_ZUSEb/icon

createPlasmicElementProxy;

export type PlasmicFaq__VariantMembers = {};
export type PlasmicFaq__VariantsArgs = {};
type VariantPropType = keyof PlasmicFaq__VariantsArgs;
export const PlasmicFaq__VariantProps = new Array<VariantPropType>();

export type PlasmicFaq__ArgsType = {};
type ArgPropType = keyof PlasmicFaq__ArgsType;
export const PlasmicFaq__ArgProps = new Array<ArgPropType>();

export type PlasmicFaq__OverridesType = {
  root?: Flex__<"div">;
  foreground2?: Flex__<"div">;
  header?: Flex__<"div">;
  featureItem?: Flex__<typeof FeatureItem>;
  bigPlants?: Flex__<"div">;
  cactuses?: Flex__<"div">;
  menuButton?: Flex__<typeof MenuButton>;
};

export interface DefaultFaqProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFaq__RenderFunc(props: {
  variants: PlasmicFaq__VariantsArgs;
  args: PlasmicFaq__ArgsType;
  overrides: PlasmicFaq__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantswvxiCa7KExGf()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__qFjxp)}>
            <Header2
              className={classNames("__wab_instance", sty.header2__zHmgv)}
            />

            <div className={classNames(projectcss.all, sty.freeBox__uzbth)}>
              <Stack__
                as={"div"}
                data-plasmic-name={"foreground2"}
                data-plasmic-override={overrides.foreground2}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground2)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__c7NuL)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__doBQz
                    )}
                  >
                    {"Behold our FAQ"}
                  </h1>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yFIr)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rxkC9
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                        : "All right, friends. Let\u2019s do this. This section will cover basic, frequently asked questions for e-commerce merchants."}
                    </div>
                  </div>
                </Stack__>
              </Stack__>
            </div>
          </div>
          <div
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames(projectcss.all, sty.header)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mjb5T)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__pzBzv)}>
                <Header2
                  className={classNames("__wab_instance", sty.header2___9Mfmc)}
                />
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__ydXe)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__hnWix
                )}
              >
                {"Top Collections"}
              </h2>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__zdDsR)}
            >
              <div className={classNames(projectcss.all, sty.column__wkBRt)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__hBwyx
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__eqiHb)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/galinaNMiziNqvJx5MUnsplashJpg.jpg",
                        fullWidth: 1920,
                        fullHeight: 1278,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  onSale={true}
                  price={"$65.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__in2Om
                      )}
                      numReviews={"(45 Review)"}
                    />
                  }
                  title={"Product"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__ok14C)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard___1F4JI
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__d82Ga)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/igorSonFvPxCqgtwcUnsplashJpg.jpg",
                        fullWidth: 640,
                        fullHeight: 481,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  onSale={true}
                  price={"$80.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__zpWAv
                      )}
                      numReviews={"(45 Review)"}
                    />
                  }
                  title={"Product"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__nMSkl)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__kkwuo
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__lLmt8)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/scottWebbORwRlTgBrPoUnsplashJpg.jpg",
                        fullWidth: 1920,
                        fullHeight: 1280,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  price={"$40.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__xWuji
                      )}
                      numReviews={"(45 Review)"}
                    />
                  }
                  title={"Product"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__m7Hvl)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__htJDl
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__jbRha)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/freddieMarriageUcfKyTanLuUnsplashJpg.jpg",
                        fullWidth: 640,
                        fullHeight: 427,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  onSale={true}
                  price={"$100.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__v7COm
                      )}
                      numReviews={"(45 Review)"}
                    />
                  }
                  title={"Product"}
                />
              </div>
            </Stack__>
            <FeatureItem
              data-plasmic-name={"featureItem"}
              data-plasmic-override={overrides.featureItem}
              className={classNames("__wab_instance", sty.featureItem)}
            />

            <div className={classNames(projectcss.all, sty.freeBox__zUaTq)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qHg2G
                )}
              >
                {"Featured Products"}
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__lvNxz)}
            >
              <div className={classNames(projectcss.all, sty.column__f1YOu)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__mIoba
                  )}
                  price={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__staJv
                      )}
                    >
                      {"$160.00"}
                    </div>
                  }
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings___30ClF
                      )}
                      numReviews={"(12 Review)"}
                      stars={"two"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__p798B
                      )}
                    >
                      {"Designed Sofa"}
                    </div>
                  }
                  withReviews={true}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__p39Ks)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__j7DiB
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__pNlnJ)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/f2.jpg",
                        fullWidth: 270,
                        fullHeight: 310,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  price={"$200.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__vjrt
                      )}
                      stars={"four"}
                    />
                  }
                  title={"Dining Table"}
                  withReviews={true}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___5RqWe)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__oGfs
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__sozju)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/f3.jpg",
                        fullWidth: 270,
                        fullHeight: 310,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  price={"$100.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__gkh74
                      )}
                      numReviews={"(23 Review)"}
                      stars={"five"}
                    />
                  }
                  title={"Chair and Table"}
                  withReviews={true}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__mosbi)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard___24Mlw
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__gGu3K)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/f4.jpg",
                        fullWidth: 270,
                        fullHeight: 310,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  price={"$299.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__sTDgi
                      )}
                      numReviews={"(35 Review)"}
                    />
                  }
                  title={"Modern Arm Chair"}
                  withReviews={true}
                />
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__uf5Jn)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__f6Wm
                )}
              >
                {"Latest Blog"}
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__qOw1)}
            >
              <div className={classNames(projectcss.all, sty.column___12Ic0)}>
                <BlogPost
                  className={classNames("__wab_instance", sty.blogPost___1Q8Mu)}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___62WuM)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/b1.jpg",
                        fullWidth: 370,
                        fullHeight: 250,
                        aspectRatio: undefined
                      }}
                    />
                  }
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___3UwWv)}>
                <BlogPost
                  className={classNames("__wab_instance", sty.blogPost__jFNqk)}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__wt8Nv)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/b2.jpg",
                        fullWidth: 370,
                        fullHeight: 250,
                        aspectRatio: undefined
                      }}
                    />
                  }
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__fpg0R)}>
                <BlogPost
                  className={classNames("__wab_instance", sty.blogPost__i46WG)}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__rYhCq)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/b3.jpg",
                        fullWidth: 370,
                        fullHeight: 250,
                        aspectRatio: undefined
                      }}
                    />
                  }
                />
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__azlk4)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__xNsXl)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"90px"}
                src={{
                  src: "/plasmic/planty/images/adidas.png",
                  fullWidth: 90,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__v5Av7)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"91px"}
                src={{
                  src: "/plasmic/planty/images/hm.png",
                  fullWidth: 91,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__tji9C)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"98px"}
                src={{
                  src: "/plasmic/planty/images/kappa.png",
                  fullWidth: 98,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__wLutp)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"124px"}
                src={{
                  src: "/plasmic/planty/images/lacoste.png",
                  fullWidth: 124,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__kXl0)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"125px"}
                src={{
                  src: "/plasmic/planty/images/levis.png",
                  fullWidth: 125,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />
            </Stack__>
            <Footer
              className={classNames("__wab_instance", sty.footer__mgK47)}
            />
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"bigPlants"}
            data-plasmic-override={overrides.bigPlants}
            hasGap={true}
            className={classNames(projectcss.all, sty.bigPlants)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__gFwWs)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__scSsV
                )}
              >
                {"Big plants"}
              </h2>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___1RzX)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___79TJ)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__oah8F)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant6Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__aUMl)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__hlaPe)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__y2UjN)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___4Smg2
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Donec finibus"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9Xrps
                    )}
                  >
                    {"bigplants"}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__sg24L
                    )}
                  >
                    {"$100.00"}
                  </h5>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__bcx18)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__yyxaP)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant1Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__eTxHg)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__uRjyN)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__gnt7R)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__o8Ydm
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Nulla suscipit"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v7Zr3
                    )}
                  >
                    {"bigplants "}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__ahrR6
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__nClBv)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__wm7Bs)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant7Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox___6HsyC)}
                >
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__dIFux)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__kjahk)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__vacC8
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Sed consectetur"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__s1Dll
                    )}
                  >
                    {"bigplants "}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__oMSkX
                    )}
                  >
                    {"$18.40 "}
                  </h5>
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___8Q5Tb)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant5Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__d1M65)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg___1EXh)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__ua7Kl)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__azAvD
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Vestibulum eget"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vwBq
                    )}
                  >
                    {"bigplants "}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__kB10
                    )}
                  >
                    {"$220.40 "}
                  </h5>
                </div>
              </Stack__>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"cactuses"}
            data-plasmic-override={overrides.cactuses}
            hasGap={true}
            className={classNames(projectcss.all, sty.cactuses)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tEv2T)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__a4Yhw
                )}
              >
                {"Cactuses"}
              </h2>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__mBc4)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__jKwje)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__pyOsq)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant41Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__x4LmI)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg___1HsBe)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__rnF8)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__fwAJe
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Cras molestie"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jRl7
                    )}
                  >
                    {"cactuses "}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__pXkz0
                    )}
                  >
                    {"$24.99"}
                  </h5>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__biU9)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__yrqX7)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant31Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox___6W3Zp)}
                >
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__xJgpc)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__xG2Xg)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__dSm9E
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Curabitur eu tempor"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___38QCw
                    )}
                  >
                    {"Cactuses"}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__izmuX
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__faK5)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__d5BrQ)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant9Webp.webp",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox___3WJpp)}
                >
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__qrD5T)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__xFro6)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__kcJoj
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Fusce sagittis"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__irDku
                    )}
                  >
                    {"Fusce sagittis"}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__wKr1R
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__rvN0R)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__hRq2A)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant2Webp.webp",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__aDqPt)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg___5FAo)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__jdynA)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__vPmZl
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Integer porta"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h1BpF
                    )}
                  >
                    {"Cactuses"}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__gr1Wk
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </Stack__>
            </Stack__>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__cKm9M)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qPa5V)}
            >
              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4__yg0I1
                )}
              >
                {"How long does shipping take?"}
              </h4>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dr0WF
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                  : "Now that\u2019s a frequent one all right, ain\u2019t it? Your answer to this should manage customer expectations. Just like a good checkout flow should. Tell them the truth"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nHr3Q)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xlB9Q)}
                >
                  <DotSvgrepoCom1SvgIcon
                    className={classNames(projectcss.all, sty.svg___7VBjE)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hylDn
                    )}
                  >
                    {"US shipping will take between 3 to 5 business days."}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__e0X8G)}
                >
                  <DotSvgrepoCom1SvgIcon
                    className={classNames(projectcss.all, sty.svg__hcxVg)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__g4UpL
                    )}
                  >
                    {
                      "International shipping will take between 5 and 10 business days."
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___0ChNt)}
                >
                  <DotSvgrepoCom1SvgIcon
                    className={classNames(projectcss.all, sty.svg__lh07L)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oJuiq
                    )}
                  >
                    {
                      "Mars shipping will be automatically redirected to Elon Musk\u2019s Twitter account."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___71Qho)}
            >
              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4__yc1M6
                )}
              >
                {"How do refunds and returns work?"}
              </h4>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xTv1G
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                  : "It happens. Even the most beautiful of plants will disappoint someone. Again, tell it like it is:"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bdLgf)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__mdu6X)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lowwn)}
                  >
                    <DotSvgrepoCom1SvgIcon
                      className={classNames(projectcss.all, sty.svg__aguR2)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bVdlM
                      )}
                    >
                      {"All discounted items sales are final."}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___4QrSn)}
                  >
                    <DotSvgrepoCom1SvgIcon
                      className={classNames(projectcss.all, sty.svg__tFg)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tZfW4
                      )}
                    >
                      {
                        "If you\u2019d like another version of your item, please use the return label. Instructions are printed on its back."
                      }
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__uE7GP)}
                  >
                    <DotSvgrepoCom1SvgIcon
                      className={classNames(projectcss.all, sty.svg__zrAm2)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__z8D9W
                      )}
                    >
                      {
                        "If your item is damaged or not functioning correctly, email us at info@planty.com, and we\u2019ll refund you + send you a new one ASAP!"
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__y2Fp)}
            >
              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4__qXhOt
                )}
              >
                {"Rapid-fire questions"}
              </h4>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lgzvv
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                  : "GDPR, am I right? Make sure you\u2019re as transparent as possible with your data handling process. Or, if you\u2019re using Snipcart, just refer to our ToS and DPA"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___9UZ0O)}
            >
              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4__quyPt
                )}
              >
                {"How do you handle sensitive customer information?"}
              </h4>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___4UfZt
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                  : "GDPR, am I right? Make sure you\u2019re as transparent as possible with your data handling process. Or, if you\u2019re using Snipcart, just refer to our ToS and DPA"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mq1J2)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__wdiQa)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ktaz5
                    )}
                  >
                    {"Q: Why is this Planty theme so beautiful?"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__myLm3
                    )}
                  >
                    {"A: We hired our first designer a couple of months ago."}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__jE7NI)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mjO2M
                    )}
                  >
                    {"Q: Why did you build a theme for Stackbit?"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gtz1S
                    )}
                  >
                    {
                      "A: We believe in Stackbit\u2019s promise of opening up the JAMstack to more developers. Plus, we trust these folks.\n Read more about Stackbit"
                    }
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___7WFzx)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jCtT2
                    )}
                  >
                    {"Q: How many people work at Snipcart? "}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pwuEw
                    )}
                  >
                    {
                      "A: Not a lot! We\u2019re a small, bootstrapped team of eight human beings. Michael might be a robot, though. "
                    }
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___5Zy0A)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__txmpM
                    )}
                  >
                    {"Q: Why is Snipcart based in Qu\u00e9bec City?"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__n2ZPz
                    )}
                  >
                    {"A: Have you been here? It\u2019s beaaautiful!"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__wCXkI)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yMoa
                    )}
                  >
                    {"Q: What\u2019s the meaning of life? "}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__amcF2
                    )}
                  >
                    {
                      "A: We\u2019re not quite sure. But building useful products with people we love feels meaningful enough."
                    }
                  </div>
                </div>
              </Stack__>
            </Stack__>
          </div>
          <Footer className={classNames("__wab_instance", sty.footer__seCb3)} />

          <div className={classNames(projectcss.all, sty.freeBox__rcf2M)}>
            <div className={classNames(projectcss.all, sty.freeBox__oGs3F)}>
              <div className={classNames(projectcss.all, sty.columns___8NVCe)}>
                <div className={classNames(projectcss.all, sty.column__hRtIw)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__oqlfM)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "562px"
                        : "562px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "100%"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "947px"
                        : "947px"
                    }
                    loading={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "lazy"
                        : "lazy"
                    }
                    src={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? {
                            src: "/plasmic/planty/images/promoWebp.webp",
                            fullWidth: 720,
                            fullHeight: 525,
                            aspectRatio: undefined
                          }
                        : {
                            src: "/plasmic/planty/images/promoWebp.webp",
                            fullWidth: 720,
                            fullHeight: 525,
                            aspectRatio: undefined
                          }
                    }
                  />
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__osEuf)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__iNjU
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "Behold our FAQ"
                      : "Still have questions?\nContact us. "}
                  </h1>
                  <div
                    className={classNames(projectcss.all, sty.columns__sfWxJ)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column__fpsRm)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fPua9
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Behold our FAQ"
                          : "226 rue St-Joseph E, \nQu\u00e9bec, QC, Canada, \nG1K 3A9"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jutD8
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Behold our FAQ"
                          : "+1-202-555-0112"}
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column__drmEh)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cXrRv
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Behold our FAQ"
                          : "geeks@snipcart.com"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__fk9Xg
                        )}
                      >
                        <Stack__
                          as={PlasmicLink__}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__sWWrn
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          <LocationSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jl3Ry
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3Vv4N
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Discover"
                              : "On the map"}
                          </div>
                        </Stack__>
                      </div>
                    </Stack__>
                  </div>
                </Stack__>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__vKykH)}>
              <div className={classNames(projectcss.all, sty.freeBox__edGXb)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___2NrkB)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__p43WL)}
                  >
                    <MenuButton
                      data-plasmic-name={"menuButton"}
                      data-plasmic-override={overrides.menuButton}
                      className={classNames("__wab_instance", sty.menuButton)}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__lF9Cr)}
                    >
                      <PlasmicIcon__
                        PlasmicIconType={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? LogoWhiteSvgIcon
                            : LogoWhiteSvgIcon
                        }
                        className={classNames(projectcss.all, sty.svg__uvq0)}
                        role={"img"}
                      />

                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__xS7O
                        )}
                        component={Link}
                        href={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "#"
                            : `/store`
                        }
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Store"
                          : "Store"}
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__tqYn8
                        )}
                        component={Link}
                        href={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "#"
                            : `/about`
                        }
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "About"
                          : "About"}
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link___7N3Bf
                        )}
                        component={Link}
                        href={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "#"
                            : `/faq`
                        }
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Faq"
                          : "Faq"}
                      </PlasmicLink__>
                    </Stack__>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__imM1)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vv44B
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "\u00a9 Company. All rights reserved. This site proudly built with "
                          : "\u00a9 Company. All rights reserved. This site proudly built with "}
                      </div>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__ifCtI
                        )}
                        component={Link}
                        href={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "https://www.plasmic.app/"
                            : "https://www.plasmic.app/"
                        }
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Plasmic"
                          : "Plasmic"}
                      </PlasmicLink__>
                    </div>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "foreground2",
    "header",
    "featureItem",
    "bigPlants",
    "cactuses",
    "menuButton"
  ],
  foreground2: ["foreground2"],
  header: ["header", "featureItem"],
  featureItem: ["featureItem"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  menuButton: ["menuButton"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  foreground2: "div";
  header: "div";
  featureItem: typeof FeatureItem;
  bigPlants: "div";
  cactuses: "div";
  menuButton: typeof MenuButton;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFaq__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFaq__VariantsArgs;
    args?: PlasmicFaq__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFaq__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicFaq__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFaq__ArgProps,
          internalVariantPropNames: PlasmicFaq__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFaq__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFaq";
  } else {
    func.displayName = `PlasmicFaq.${nodeName}`;
  }
  return func;
}

export const PlasmicFaq = Object.assign(
  // Top-level PlasmicFaq renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground2: makeNodeComponent("foreground2"),
    header: makeNodeComponent("header"),
    featureItem: makeNodeComponent("featureItem"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    menuButton: makeNodeComponent("menuButton"),

    // Metadata about props expected for PlasmicFaq
    internalVariantProps: PlasmicFaq__VariantProps,
    internalArgProps: PlasmicFaq__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicFaq;
/* prettier-ignore-end */
